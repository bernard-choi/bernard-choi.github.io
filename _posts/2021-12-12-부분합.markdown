---
layout: post
title: "[Python] 1806 부분합"
subtitle: "[Python] 1806 부분합"
categories: Algorithm
tags: 문제풀이 자료구조 twopointer
comments: true


---
## [1806 부분합](https://www.acmicpc.net/problem/1806)

## 문제

10,000 이하의 자연수로 이루어진 길이 N짜리 수열이 주어진다. 이 수열에서 연속된 수들의 부분합 중에 그 합이 S 이상이 되는 것 중, 가장 짧은 것의 길이를 구하는 프로그램을 작성하시오.

**입력**

첫째 줄에 N (10 ≤ N < 100,000)과 S (0 < S ≤ 100,000,000)가 주어진다. 둘째 줄에는 수열이 주어진다. 수열의 각 원소는 공백으로 구분되어져 있으며, 10,000이하의 자연수이다.

**출력**

첫째 줄에 구하고자 하는 최소의 길이를 출력한다. 만일 그러한 합을 만드는 것이 불가능하다면 0을 출력하면 된다.

## 풀이
- 투 포인터를 이용해서 풀 수 있다. 
  - start와 end를 두고, 만약 부분합이 S를 넘어가면 start를 늘려준다. (범위를 줄인다)
  - 반면 부분합이 S보다 작으면 end를 늘려준다. (범위를 늘린다)
- 이때 부분합을 구하는 부분에서 미리 누적합을 구하면 `O(end-start)`를 `O(1)`로 줄일 수 있다. 

```python
N,S = map(int, input().split())
my_list = list(map(int, input().split()))

min_len = 1000001
start = 0
end = 1

cumsum = [0]*(len(my_list)+1)
for i in range(1, len(my_list)+1):
    cumsum[i] = cumsum[i-1] + my_list[i-1]

while start < N:
    my_s = cumsum[end]-cumsum[start]
    if my_s >= S:
        min_len = min(min_len, end-start)
        start += 1
    else:
        if end < N:
            end += 1
        else:
            start += 1

if min_len == 1000001:
    print(0)
else:
    print(min_len)
```