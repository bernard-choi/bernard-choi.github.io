---  
layout: post
title: "[DB] 데이터베이스 정규화 - 데이터 이상 현상"
subtitle: "[DB] 데이터베이스 정규화"  
categories: CS
tags: DataBase InnoDB Transaction MySQL
comments: true  
---  

## 데이터 정규화가 필요한 이유

데이터베이스를 잘못 설계하면 불필요한 데이터 중복으로 인한 공간낭비를 넘어 부작용을 초래할 수 있다. 이러한 부작용을 이상(Anomaly)이라고 하는데 이상 현상의 종류로 `삽입이상`, `갱신이상`, `삭제이상`이 있다. 

데이터를 입력, 수정, 삭제할 때 중복으로 생기는 부작용인 이상현상을 제거해 나가면서 데이터베이스를 올바르게 설계해나가는 과정

- 목적
    - 데이터 중복 저장으로 인해 발생하는 비효율성 제거(메모리 낭비, 프로그램 복잡도)
    - 데이터의 일관성이 지켜지지 않는 현상을 해결
    - 데이터의 효율적인 관리와 데이터무결성을 지키기 위함이다.


아래 예제에서 한 튜플을 고유하게 식별할 수 있는 속성의 조합은 학번과 과목코드이고 이 조합을 기본키로 가지는 테이블이다. 한 학생은 하나의 학과에만 속할 수 있다고 가정하자. 

![데이터이상현상0](https://yunsikus.github.io/assets/img/post_img/데이터이상현상0.jpg)

---

## 삽입이상(Insertion Anomaly)

- 아직 수업을 하나도 수강하지 않은 학생이 있다고 가정하자. 과목번호, 과목명, 학점이 공란이 되어야 한다. 
- 이때, 과목코드는 NULL값이 될 수 없으므로(PK) 굳이 삽입하려면 '미수강'같은 과목코드를 새로 만들어서 삽입해야 합니다. 
- **새 데이터를 삽입하기 위해 불필요한 데이터도 함께 삽입해야 하는 문제를 `삽입이상`이라고 한다.**

![데이터이상현상1](https://yunsikus.github.io/assets/img/post_img/데이터이상현상1.jpg)

---

## 갱신이상(Update Anomaly)

- 홍길동의 AI학과가 더 전망이 좋을 것 같아 컴퓨터학과 → AI학과로 변경해야함
- 과목의 갯수만큼 모두 "AI학과"로 수정해줘야한다.
- 이때 모두 변경하지 않고 일부만 변경할 경우 홍길동이 컴퓨터학과인지 AI학과인지 알 수가 없다.
- **중복 레코드중 일부만 변경하여 데이터가 불일치하게 되는 모순의 문제를 `갱신이상`이라고 한다**

![데이터이상현상2](https://yunsikus.github.io/assets/img/post_img/데이터이상현상2.jpg)

--

## 삭제이상(Deletion Anomaly)

- 트럼프가 수강신청기간 중 부동산 개론을 듣기 싫어 수강 취소한다면?
- 과목 정보뿐 아니라 학생 정보도 삭제된다.
- 원하지 않는 데이터 삭제를 막기 위해 수정으로 삭제 처리할 수 있다.
- **튜플을 삭제하면 꼭 필요한 데이터까지 함께 삭제되는 데이터 손실 문제를 `삭제이상`이라고 한다**

![데이터이상현상3](https://yunsikus.github.io/assets/img/post_img/데이터이상현상3.jpg)

- 이와 같은 이상현상들이 발생하는 이유는 정규화가 되어 있지 않은 테이블 설계 때문. 
- 코딩할 때에도 관심사를 분리하면 코드의 재사용성과 유지보수의 편의성이 높아지는 것처럼 데이터베이스 설계에서도 비슷한 원칙이 적용된다. 데이터베이스 설계의 경우 관심사를 분리하지 않아 생기는 문제는 코드단에서의 문제보다 훨씬 치명적이다. 
- 이론적으로는 정규화를 수행하려면 속성들간의 관련성을 파악해야 하는데, 이 속성들간의 관련성을 `함수의 종속성(Functional Dependency)`라고 한다. 일반적으로 하나의 릴레이션에는 하나의 함수적 종속성만이 존재하도록 정규화를 하게 된다. 
