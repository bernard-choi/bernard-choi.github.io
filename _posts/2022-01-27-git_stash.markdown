---  
layout: post
title: "[Git] stash로 변경 사항을 커밋하기 보다는 임시저장하자"
subtitle: "[Git] stash로 변경 사항을 커밋하기 보다는 임시저장하자. "  
categories: Development
tags: Git
comments: true  
---  
## 테스트를 위한 파일 생성
- 테스트를 위해 아래와 같이 파일을 생성함
- `feature-a` 브랜치 작업중에 `master` 브랜치로 급하게 가야되는 경우
- `feature-a` 브랜치 작업을 커밋하지 않고 임시저장하고 `master` 브랜치로 붙일 수 있다. (`git stash`)
  
- `master` 브랜치
  
```python
## a.py
a 파일을 생성함
```

```python
## b.py
b 파일을 생성함
```

- `feature-a` 브랜치

```python
## c.py
c 파일을 생성함
```

---

## git stash로 임시저장하기

- `git stash` : 수정 내용을 임시 저장하는 명령어. 브랜치간 전환할 때 사용한다. 
- `git stash list` : 임시 저장된 내용을 보여준다. 
- `feature-a` 브랜치에서 `c.py`를 추가

![git_stash1.jpg](https://yunsikus.github.io/assets/img/post_img/git_stash1.jpg)

- `git stash`를 통해 임시 저장한다.
- 작업 내용은 사라지고 `git stash list`에 쌓여있는 것을 확인할 수 있다. 
  
![git_stash2.jpg](https://yunsikus.github.io/assets/img/post_img/git_stash2.jpg)

---


## 브랜치 전환 후 stash로 저장한 내용을 불러오기

- `git stash pop` : `stash list`에 있는 내용을 현재 브랜치에 merge함. 이때 스택에서 작업 내용을 제거
  - 이전 브랜치에서 작업한 `c.py`가 `master` 브랜치로 merge됨
  
![git_stash3.jpg](https://yunsikus.github.io/assets/img/post_img/git_stash3.jpg)

- `git stash apply`: stash pop과 같지만 스택에서 작업 내용이 제거되지 않음


## 출처

인프런 - 모든 개발자의 실무를 위한 올인원 기본기 클래스