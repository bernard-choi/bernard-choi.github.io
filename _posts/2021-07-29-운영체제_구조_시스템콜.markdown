---
layout: post
title: "[운영체제] 시스템콜, 사용자모드, 커널"
subtitle: "[운영체제] 시스템콜, 사용자모드, 커널"
categories: CS
tags: OS  
comments: true


---

## API란?

- 사용자는 OS와 Shell을 통해 서로 요청을 주고 받는다.
- 이처럼 응용 프로그램은 OS와 프로그래밍 코드를 통해 요청을 주고 받는데 이게 `API(Application Programming Interface)`이다. 
- 각 응용프로그램마다 OS를 사용할 수 있는 함수들이 있는데 이 API가 함수의 형태로 제공된 것. 
- ex) open(): 파일을 여는데 사용하는 open()이라는 함수는 API의 한 형태로 볼 수 있다. 
- 이러한 함수들이 너무 많기 때문에 보통 라이브러리 형태로 제공된다. 

## 시스템 콜이란?

- OS는 응용 프로그램이 OS의 각 기능을 사용할 수 있도록 `시스템 콜`이라는 명령 또는 함수를 제공.
- 그래서 API 내부에는 `시스템 콜`을 호출하는 형태로 만들어지는 경우가 대부분
- 보통 `시스템 콜`을 직접 사용하기 보다, 해당 시스템콜을 사용하여 만든 각 언어별 `API`를 사용하여 응용프로그램이 프로그래밍 되어 있다.

![시스템콜1](https://yunsikus.github.io/assets/img/post_img/시스템콜1.png)

- 사용자로부터 요청을 shell이 받으면 그에 맞는 `API`를 사용해서 OS에게 요청

## 사용자 모드와 커널모드

- 사용자 프로그램의 잘못된 수행으로 다른 프로그램 및 운영체제에 피해가 가지 않도록 하기 위한 보호장치가 필요. 이를 위해 CPU 권한 모드라는게 있다. 

- Mode bit을 통해 하드웨어적으로 두 가지 모드의 operation을 지원.

- 1: 사용자 모드(user mode by application): 사용자 프로그램의 일반적인 명령 수행 할 때 쓰이는 모드
- 0 : 커널(모니터)모드 (kernel mode by OS): OS 코드 수행. 특권 명령어 실행과 원하는 작업 수행을 위한 자원 접근(메모리, 디스크, 네트워크)을 가능케 하는 모드. 

![시스템콜2](https://yunsikus.github.io/assets/img/post_img/시스템콜2.png)

- 우리가 만든 프로그램(응용 프로그램)은 사용자 영역에 있고, OS가 제공하는 `시스템콜`에 해당되는 코드는 `커널 모드`로 실행
 

## 정리 

- OS는 `시스템콜`을 제공
- 프로그래밍 언어별로 운영체제 기능을 활용하기 위해 `시스템 콜`을 기반으로 `API`로 제공
- 응용 프로그램은 운영체제 기능 필요 시, 해당 `API`를 사용해서 프로그램을 작성
- 응용 프로그램이 실행되서 운영체제 기능이 필요한 `API`를 호출하면, `시스템 콜`이 호출되서 커널모드로 변경되어 OS 내부에서 해당 명령이 실행되고 다시 응용 프로그램으로 돌아간다. 


<details>
<summary>질문 1 커널이란?</summary>
<div markdown="1">       

커널은 하드웨어와 응용프로그램 사이에서 인터페이스(System Call)를 제공하여 응용 프로그램이 하드웨어에서부터 오는 자원(CPU, 메모리, 저장장치, 모니터)을 관리하고 사용할 수 있게 해준다. 
즉, OS의 API기능을 담당하는 부분. 

</div>
</details>

<details>
<summary>질문 2 API란?</summary>
<div markdown="1">       

응용프로그램이 OS와 요청을 주고 받는 인터페이스를 API라고 함. 

</div>
</details>

<details>
<summary>질문 3 시스템콜이란?</summary>
<div markdown="1">       

OS가 제공하는 서비스를 어플리케이션에 제공하는 인터페이스로, API 내부에는 시스템콜을 호출하는 형태로 만들어진다. 시스템콜의 종류로는 프로세스 제어(생성, 종료, 시그널), 파일 및 IO 관리, 통신 등이 있다. 

</div>
</details>